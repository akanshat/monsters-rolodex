{"ast":null,"code":"var _jsxFileName = \"/home/akanshat/web/monsters-rolodex/src/App.js\";\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    //we are using comDidMount because we have access to it\n    // we are fetching and taking a response\n    //we are taking users that we got from it and are giving it to monsters array\n    //this fetch return a promise\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      monsters: users\n    }));\n  }\n\n  render() {\n    //.filter method and .includes for search\n    //this is destructuring\n    const {\n      monsters,\n      searchField\n    } = this.state;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLowerCase()));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, \"Monsters Rolodex\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"search\",\n      placeholder: \"Search monsters\" //onchange is in jsx not an actual HTML\n      //we dont manually touch the dom\n      //synthetic events in react- fake event example: onchange\n      //we receive that event when dom changes\n      ,\n      onChange: e => {\n        //setState is an asynchronous function call\n        //async event is something which takes indefinaie amount of time\n        this.setState({\n          searchField: e.target.value\n        }, () => console.log(this.state));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(CardList, {\n      monsters: filteredMonsters,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/akanshat/web/monsters-rolodex/src/App.js"],"names":["React","Component","CardList","App","constructor","state","monsters","searchField","componentDidMount","fetch","then","response","json","users","setState","render","filteredMonsters","filter","monster","name","toLowerCase","includes","e","target","value","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,QAAT,QAAyB,4CAAzB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAC1BG,EAAAA,WAAW,GAAI;AACb;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,WAAW,EAAE;AAFF,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB;AACA;AACA;AACA;AACAC,IAAAA,KAAK,CAAC,4CAAD,CAAL,CACGC,IADH,CACQC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADpB,EAEGF,IAFH,CAEQG,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAAEO;AAAZ,KAAd,CAFjB;AAGD;;AAEDE,EAAAA,MAAM,GAAI;AACR;AAEA;AACA,UAAM;AAAET,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,QAA4B,KAAKF,KAAvC;AACA,UAAMW,gBAAgB,GAAGV,QAAQ,CAACW,MAAT,CAAgBC,OAAO,IAC9CA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,CAAoCd,WAAW,CAACa,WAAZ,EAApC,CADuB,CAAzB;AAGA,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,eAEE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,WAAW,EAAC,iBAFd,CAGE;AACA;AACA;AACA;AANF;AAOE,MAAA,QAAQ,EAAEE,CAAC,IAAI;AACb;AACA;AAEA,aAAKR,QAAL,CAAc;AAAEP,UAAAA,WAAW,EAAEe,CAAC,CAACC,MAAF,CAASC;AAAxB,SAAd,EAA+C,MAC7CC,OAAO,CAACC,GAAR,CAAY,KAAKrB,KAAjB,CADF;AAGD,OAdH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,eAkBE,oBAAC,QAAD;AAAU,MAAA,QAAQ,EAAEW,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBF,CADF;AAsBD;;AAlDyB;;AAqD5B,eAAeb,GAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport { CardList } from './components/card-list/card-list.component'\n\nclass App extends Component {\n  constructor () {\n    super()\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount () {\n    //we are using comDidMount because we have access to it\n    // we are fetching and taking a response\n    //we are taking users that we got from it and are giving it to monsters array\n    //this fetch return a promise\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  render () {\n    //.filter method and .includes for search\n\n    //this is destructuring\n    const { monsters, searchField } = this.state\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    return (\n      <div className='App'>\n        <h1>Monsters Rolodex</h1>\n        <input\n          type='search'\n          placeholder='Search monsters'\n          //onchange is in jsx not an actual HTML\n          //we dont manually touch the dom\n          //synthetic events in react- fake event example: onchange\n          //we receive that event when dom changes\n          onChange={e => {\n            //setState is an asynchronous function call\n            //async event is something which takes indefinaie amount of time\n\n            this.setState({ searchField: e.target.value }, () =>\n              console.log(this.state)\n            )\n          }}\n        />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    )\n  }\n}\n\nexport default App\n"]},"metadata":{},"sourceType":"module"}